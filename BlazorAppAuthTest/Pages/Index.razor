@page "/"

<PageTitle>Index</PageTitle>

@*<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />*@

<AuthorizeView>
    <Authorized>
        <h1>Hello, your name => @context.User.Identity.Name!</h1>
        <h1>AuthenticationType => @context.User.Identity.AuthenticationType</h1>
        <p>You can only see this content if you're authorized.</p>
        <button @onclick="DoSomething">Authorized Only Button</button>
    </Authorized>
    <NotAuthorized>
        <h1>Authentication Failure!</h1>
        <p>You're not signed in.</p>
    </NotAuthorized>
</AuthorizeView>

<AuthorizeView Roles="user">
    <p>only USER</p>
</AuthorizeView>
<AuthorizeView Roles="admin">
    <p>only ADMIN</p>
</AuthorizeView>
<AuthorizeView Roles="superadmin">
    <p>only SUPERADMIN</p>
</AuthorizeView>


@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private async Task DoSomething()
    {
        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            // Perform an action only available to authenticated (signed-in) users.
        }

        try
        {
            var a = user.IsInRole("admin");

            if (a)
            {
                // Perform an action only available to users in the 'admin' role.
            }
        }
        catch (Exception e)
        {
            
        }

    

        //if ((await AuthorizationService.AuthorizeAsync(user, "content-editor"))
        //    .Succeeded)
        //{
        //    // Perform an action only available to users satisfying the 
        //    // 'content-editor' policy.
        //}
    }
}
